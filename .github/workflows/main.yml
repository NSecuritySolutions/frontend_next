name: Main Security workflow

on:
  workflow_dispatch:
jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        # Получение исходного кода из репозитория
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        # Установка сборщика контейнеров Docker
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker
        # Авторизация на Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push to DockerHub
        # Одновременный билд и пуш образа в Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: natashasolntseva/security_frontend:latest
          load: true
      - name: Save Docker image to file
        # Сохраням образ как файл
        run: |
          docker save -o security_frontend.tar natashasolntseva/security_frontend:latest

      - name: Set permissions on Docker image file
        # Ставим разрешения, чтобы мы могли взаимодействовать с файлом
        run: |
          sudo chmod 777 security_frontend.tar

      - name: Upload Docker image to server
        # Загружем файл на сервер
        uses: appleboy/scp-action@master
        with:
          source: security_frontend.tar
          target: /root/security/
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          overwrite: true

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub
    steps:
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          # Параметр script передаёт в action appleboy/ssh-action команды,
          # которые нужно выполнить на сервере,
          # с которым установлено соединение
          script: |
            cd security
            docker load -i /root/security/security_frontend.tar
            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml up -d
